/ HEALTH section
.ui.raised.pink.segment[class="#{'hidden' if @player.loaned_out?}"]
  .ui.dividing.header
    i.pink.first.aid.icon
    .content
      | Health
      .sub.header
        span[class="ui #{@player.injured? ? 'pink' : 'green'} mini statistic"]
          span.value[data-label="injury status"]
            = 'NOT ' unless  @player.injured?
            | INJURED
  .ui.content[data-label="update injury"]
    = form_for(@player, as: :player, method: :post, remote: true, url: { action: :set_status }, html: { class: 'ui large fluid form' }) do
      = hidden_field_tag :type, @player.injured? ? 'recover' : 'injury'
      .ui.stackable.grid
        .equal.width.row
          .column
            .ui.left.icon.fluid.input
              i.calendar.icon
              = text_field_tag :date, @team.current_date, data: { flatpickr: true }
          .column
            .field[class="#{'disabled' if @player.injured?}"]
              = text_field_tag :notes, nil, placeholder: 'Type of Injury'
          .column
            = submit_tag "LOG AS#{ ' NOT' if @player.injured? } INJURED", class: "ui #{@player.injured? ? 'green' : 'pink'} submit fluid button"

- unless @player.current_contract.loan?

  / SIGN NEW CONTRACT section
  .ui.raise.blue.segment
    .ui.dividing.header
      i.blue.write.icon
      .content Sign New Contract
    .ui.content[data-label="new contract"]
      = form_for(@player, as: :player, method: :post, remote: true, url: { action: :sign_new_contract }, html: { class: 'ui large fluid form' }) do
        .ui.stackable.grid
          = fields_for :term, @player.current_contract.build_new_term do |f|
            .equal.width.row
              .column
                .ui.left.icon.fluid.input
                  i.calendar.icon
                  = f.text_field :start_date, value: @team.current_date, data: { flatpickr: true }
              .column
                .ui.left.icon.fluid.input
                  i.calendar.icon
                  = f.text_field :end_date, value: @player.current_contract.end_date, placeholder: 'Contract Expires', data: { flatpickr: true }
              .column
            .equal.width.row
              .column
                .field
                  .ui.left.icon.input
                    i.money.icon
                    = f.number_field :wage, placeholder: 'Wage'
              .column
                .field
                  .ui.left.icon.input
                    i.money.icon
                    = f.number_field :signing_bonus, placeholder: 'Signing Bonus'
              .column
                .field
                  .ui.left.icon.input
                    i.money.icon
                    = f.number_field :release_clause, placeholder: 'Release Clause'
            .equal.width.row
              .column
                .field
                  .ui.left.icon.input
                    i.money.icon
                    = f.number_field :stat_bonus, placeholder: 'Perf. Bonus'
              .column
                .field
                  = f.number_field :num_stats, placeholder: 'Requirement'
              .column
                .field
                  = f.select :stat_type, ['Appearances', 'Goals', 'Assists', 'Clean Sheets'], {include_blank: 'Type of Req.'}, {class: 'fluid dropdown'}
            .six.wide.column
              = submit_tag 'SIGN NEW CONTRACT', class: "ui blue submit fluid button"

  / LOAN section
  .ui.raised.orange.segment[class="#{'hidden' unless @player.active}"]
    .ui.dividing.header
      i.orange.plane.icon
      .content
        | Loan
        .sub.header
          span[class="ui #{@player.loaned_out? ? 'orange' : 'green'} mini statistic"]
            span.value[data-label="loan status"]
              = @player.loaned_out? ? \
                "ON LOAN #{ "AT #{@player.loans.last.destination}" if @player.loans.last.destination.present?} " : \
                "AT #{@team.team_name}"
    .ui.content[data-label="update loan"]
      = form_for(@player, as: :player, method: :post, remote: true, url: { action: :set_status }, html: { class: 'ui large fluid form' }) do
        = hidden_field_tag :type, @player.loaned_out? ? 'return' : 'loan'
        .ui.stackable.grid
          .equal.width.row
            .column
              .ui.left.icon.fluid.input
                i.calendar.icon
                = text_field_tag :date, @team.current_date, data: { flatpickr: true }
            .column
              .ui.left.icon.fluid.input[class="#{'disabled' if @player.loaned_out?}"]
                i.handshake.icon
                = text_field_tag :notes, '', placeholder: 'Destination'
            .column
              = submit_tag (@player.loaned_out? ? 'RETURN TO CLUB' : 'LOAN OUT' ), class: "ui #{@player.loaned_out? ? 'green' : 'orange'} submit fluid button"

/ EXIT section
.ui.raised.red.segment[class="#{'hidden' if !@player.active || @player.loaned_out?}"]
  .ui.dividing.header
    i.red.sign.out.icon
    | Exit Club
  .ui.content[data-label="update loan"]
    = form_for(@player, as: :player, method: :post, remote: true, url: { action: :exit }, html: { class: 'ui large fluid form', data: { confirm: "#{@player.name} is leaving the club?"} }) do
      .ui.stackable.grid
        = fields_for :contract, @player.current_contract do |f|
          .equal.width.row
            .column
              .field[no-empty]
                .ui.left.icon.input
                  i.calendar.icon
                  = f.text_field :end_date, value: @team.current_date, placeholder: 'Exit Date', data: { flatpickr: true}
            .column
              .field[class="#{'disabled' if @player.current_contract.loan?}"]
                .ui.left.icon.input
                  i.handshake.icon
                  = f.object.loan? ? \
                    f.text_field(:destination, value: f.object.origin) : \
                    f.text_field(:destination, placeholder: 'Destination')
            .column
          = f.fields_for :exit_cost, f.object.build_exit_cost do |cf|
            .equal.width.row
              .column
                .field[class="#{'disabled' if f.object.loan?}"]
                  .ui.left.icon.input
                    i.money.icon
                    = cf.number_field :fee, placeholder: 'Transfer Fee'
              .column
                .field[class="#{'disabled' if f.object.loan?}"]
                  = cf.select :player_id,
                    grouped_options_for_select(@team.grouped_players, cf.object.player_id),
                    { include_blank: 'Traded Player' },
                    { class: 'grouped search fluid dropdown'}
              .column
                .field[class="#{'disabled' if f.object.loan?}"]
                  .ui.icon.input
                    i.percent.icon
                    = cf.number_field :add_on_clause, value: nil, placeholder: 'Add-On Clause'
        .six.wide.column
          = submit_tag 'LEAVE CLUB', class: "ui red fluid submit button"